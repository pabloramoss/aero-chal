import type {NextPage} from "next";

import Head from "next/head";
import {useState} from "react";

import {
  useAddPointsMutation,
  useGetProductsQuery,
  useGetUserQuery,
} from "@redux/features/products/productsApiSlice";
import {AddPoints} from "@types";
import Navbar from "@components/navbar";
import Products from "@components/products";
import products from "@components/products";
import ProductsList from "@components/products/ProductsList";
import Pagination from "@components/pagination/Pagination";

import styles from "../styles/Home.module.css";

const Home: NextPage = () => {
  const [currentPage, setCurrentPage] = useState(1);
  const [productsPerPage, setProductsPerPage] = useState(10);

  const {data: products, isLoading} = useGetProductsQuery();

  //Get current products
  const indexLastProduct = currentPage * productsPerPage;
  const indexFirstProduct = indexLastProduct - productsPerPage;
  const currentProducts = products?.slice(indexFirstProduct, indexLastProduct);
  const [pointsAmount, setPointsAmount] = useState<AddPoints>({amount: 1000});
  // const {data = [], isFetching} = useGetProductsQuery();
  const {data: user, refetch} = useGetUserQuery();

  const [addPoints] = useAddPointsMutation();
  const handleAddPoints = async (amount: AddPoints) => {
    await addPoints(amount);
    refetch();
  };

  const handleSetPoints = (amount: 1000 | 5000 | 7500) => {
    setPointsAmount({amount: amount});
  };

  const paginate = (pageNumber: number) => {
    setCurrentPage(pageNumber);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta content="Generated by create next app" name="description" />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <Navbar />
        {`<Navbar/>`}
        {`<BackgroundWave>`}
        {`<Hero />`}
        {`<Walkthrough>`}
        {`<BackgroundWave/>`}
        {`<Products />`}
        {`<Footer />`}
        <button
          className={pointsAmount.amount === 1000 ? "btn-active" : ""}
          onClick={() => handleSetPoints(1000)}
        >
          Aumentar 1000 puntos
        </button>
        <button
          className={pointsAmount.amount === 5000 ? "btn-active" : ""}
          onClick={() => handleSetPoints(5000)}
        >
          Aumentar 5000 puntos
        </button>
        <button
          className={pointsAmount.amount === 7500 ? "btn-active" : ""}
          onClick={() => handleSetPoints(7500)}
        >
          Aumentar 7500 puntos
        </button>
        <button onClick={() => handleAddPoints(pointsAmount)}>Agregar puntos</button>
        <p>{user?.name}</p>
        <p>${user?.points}</p>
        <ProductsList isLoading={isLoading} products={currentProducts} />
        <Pagination
          paginate={paginate}
          productsPerPage={productsPerPage}
          totalProducts={products?.length}
        />
        {/* <Products /> */}
      </main>
    </div>
  );
};

export default Home;
